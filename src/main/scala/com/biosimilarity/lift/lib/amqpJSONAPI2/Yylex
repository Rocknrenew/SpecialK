// This JLex file was machine-generated by the BNF converter
package com.biosimilarity.lift.lib.amqpJSONAPI2;

import java_cup.runtime.*;
%%
%cup
%unicode
%line
%public
%{
  String pstring = new String();
  public int line_num() { return (yyline+1); }
  public String buff() { return new String(yy_buffer,yy_buffer_index,10).trim(); }
%}
LETTER = ({CAPITAL}|{SMALL})
CAPITAL = [A-Z\xC0-\xD6\xD8-\xDE]
SMALL = [a-z\xDF-\xF6\xF8-\xFF]
DIGIT = [0-9]
IDENT = ({LETTER}|{DIGIT}|['_])
%state COMMENT
%state CHAR
%state CHARESC
%state CHAREND
%state STRING
%state ESCAPED
%%
<YYINITIAL>\{ { return new Symbol(sym._SYMB_0); }
<YYINITIAL>, { return new Symbol(sym._SYMB_1); }
<YYINITIAL>\} { return new Symbol(sym._SYMB_2); }
<YYINITIAL>\"headers\" { return new Symbol(sym._SYMB_3); }
<YYINITIAL>: { return new Symbol(sym._SYMB_4); }
<YYINITIAL>\"body\" { return new Symbol(sym._SYMB_5); }
<YYINITIAL>\[ { return new Symbol(sym._SYMB_6); }
<YYINITIAL>\] { return new Symbol(sym._SYMB_7); }
<YYINITIAL>\"testReqEmptyHdrs\" { return new Symbol(sym._SYMB_8); }
<YYINITIAL>\"testReqURIHdr\" { return new Symbol(sym._SYMB_9); }
<YYINITIAL>\"testReqUUIDHdr\" { return new Symbol(sym._SYMB_10); }
<YYINITIAL>\"testRspEmptyHdrs\" { return new Symbol(sym._SYMB_11); }
<YYINITIAL>\"testRspURIHdr\" { return new Symbol(sym._SYMB_12); }
<YYINITIAL>\"testRspUUIDHdr\" { return new Symbol(sym._SYMB_13); }
<YYINITIAL>\"testReqEmptyBody\" { return new Symbol(sym._SYMB_14); }
<YYINITIAL>\"testRspEmptyBody\" { return new Symbol(sym._SYMB_15); }
<YYINITIAL>\"ask\" { return new Symbol(sym._SYMB_16); }
<YYINITIAL>\"answer\" { return new Symbol(sym._SYMB_17); }
<YYINITIAL>\"tell\" { return new Symbol(sym._SYMB_18); }
<YYINITIAL>\"acknowledge\" { return new Symbol(sym._SYMB_19); }
<YYINITIAL>\"response\" { return new Symbol(sym._SYMB_20); }
<YYINITIAL>\"request\" { return new Symbol(sym._SYMB_21); }
<YYINITIAL>\"getRequest\" { return new Symbol(sym._SYMB_22); }
<YYINITIAL>\"fetchRequest\" { return new Symbol(sym._SYMB_23); }
<YYINITIAL>\"subscribeRequest\" { return new Symbol(sym._SYMB_24); }
<YYINITIAL>\"putRequest\" { return new Symbol(sym._SYMB_25); }
<YYINITIAL>\"storeRequest\" { return new Symbol(sym._SYMB_26); }
<YYINITIAL>\"publishRequest\" { return new Symbol(sym._SYMB_27); }
<YYINITIAL>\"getResponse\" { return new Symbol(sym._SYMB_28); }
<YYINITIAL>\"fetchResponse\" { return new Symbol(sym._SYMB_29); }
<YYINITIAL>\"subscribeResponse\" { return new Symbol(sym._SYMB_30); }
<YYINITIAL>\"putResponse\" { return new Symbol(sym._SYMB_31); }
<YYINITIAL>\"storeResponse\" { return new Symbol(sym._SYMB_32); }
<YYINITIAL>\"publishResponse\" { return new Symbol(sym._SYMB_33); }
<YYINITIAL>\"ok\" { return new Symbol(sym._SYMB_34); }
<YYINITIAL>\"notok\" { return new Symbol(sym._SYMB_35); }
<YYINITIAL>/ { return new Symbol(sym._SYMB_36); }
<YYINITIAL>\. { return new Symbol(sym._SYMB_37); }
<YYINITIAL>false { return new Symbol(sym._SYMB_38); }
<YYINITIAL>null { return new Symbol(sym._SYMB_39); }
<YYINITIAL>true { return new Symbol(sym._SYMB_40); }

<YYINITIAL>\"\${CAPITAL}({LETTER}|{DIGIT}|_)*\" { return new Symbol(sym.VarUIdent, yytext().intern()); }
<YYINITIAL>{CAPITAL}({LETTER}|{DIGIT}|_)* { return new Symbol(sym.UIdent, yytext().intern()); }
<YYINITIAL>{SMALL}({LETTER}|{DIGIT}|_)* { return new Symbol(sym.LIdent, yytext().intern()); }
<YYINITIAL>_.* { return new Symbol(sym.Wild, yytext().intern()); }

<YYINITIAL>"\"" { yybegin(STRING); }
<STRING>\\ { yybegin(ESCAPED); }
<STRING>\" { String foo = pstring; pstring = new String(); yybegin(YYINITIAL); return new Symbol(sym._STRING_, foo.intern()); }
<STRING>.  { pstring += yytext(); }
<ESCAPED>n { pstring +=  "\n"; yybegin(STRING); }
<ESCAPED>\" { pstring += "\""; yybegin(STRING); }
<ESCAPED>\\ { pstring += "\\"; yybegin(STRING); }
<ESCAPED>t  { pstring += "\t"; yybegin(STRING); }
<ESCAPED>.  { pstring += yytext(); yybegin(STRING); }


<YYINITIAL>{DIGIT}+"."{DIGIT}+("e"(\-)?{DIGIT}+)? { return new Symbol(sym._DOUBLE_, new Double(yytext())); }
<YYINITIAL>{DIGIT}+ { return new Symbol(sym._INTEGER_, new Integer(yytext())); }

<YYINITIAL>[ \t\r\n\f] { /* ignore white space. */ }
